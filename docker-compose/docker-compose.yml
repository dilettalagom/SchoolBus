version: "2.1"

networks:
  app_network:
    driver: bridge

services:

  zookeeper:
    image: zookeeper
    restart: always
    container_name: zookeeper
    hostname: zookeeper
    networks:
      - app_network
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    build:
      context: ../docker-images/kafka
    image: digi/kafka
    container_name: kafka
    hostname: kafka
    networks:
      - app_network
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    links:
      - zookeeper
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LOG_RETENTION_HOURS=1
      - BROKER_ID=1
      - KAFKA_MESSAGE_MAX_BYTES=2000000000
      - KAFKA_CREATE_TOPICS=dataQuery1:1:1
      - KAFKA_CREATE_TOPICS=dataQuery2:1:1
      - KAFKA_CREATE_TOPICS=dataQuery3:1:1


  kafka-producer:
    build:
      context: ../docker-images/kafka
    image: digi/kafka
    container_name: kafka-producer
    hostname: kafka-producer
    networks:
      - app_network
    expose:
      - "5005" # remote intellij debug
    ports:
      - "5005:5005" # remote intellij debug
    depends_on:
      - zookeeper
      - kafka
    links:
      - zookeeper
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LOG_RETENTION_HOURS=1
      - KAFKA_MESSAGE_MAX_BYTES=2000000000

    entrypoint: /bin/sh
    stdin_open: true
    tty: true
    volumes:
      - ./kafka-producer:/producer


  kafka-consumer:
    build:
      context: ../docker-images/kafka
    image: digi/kafka
    container_name: kafka-consumer
    hostname: kafka-consumer
    networks:
      - app_network
    expose:
      - "5006" # remote intellij debug
    ports:
      - "5006:5006" # remote intellij debug
    depends_on:
      - zookeeper
      - kafka
    links:
      - zookeeper
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LOG_RETENTION_HOURS=1
      - KAFKA_MESSAGE_MAX_BYTES=2000000000
    entrypoint: /bin/sh
    stdin_open: true
    tty: true
    volumes:
      - ./kafka-consumer:/consumer



  flink-jobmanager:
    build:
      context: ../docker-images/flink
    image: digi/flink
    hostname: flink-jobmanager
    container_name: flink-jobmanager
    networks:
      - app_network
    expose:
      - "6123"
    ports:
      - "8081:8081"
    command: jobmanager
    volumes:
      - ./flink-jar:/opt/flink/flink-jar
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager


  flink-taskmanager1:
    build:
      context: ../docker-images/flink
    image: digi/flink
    hostname: flink-taskmanager1
    container_name: flink-taskmanager1
    networks:
      - app_network
    expose:
      - "6121"
      - "6122"
    depends_on:
      - flink-jobmanager
    links:
      - "flink-jobmanager:jobmanager"
    command: taskmanager
    volumes:
    - ./flink-jar:/opt/flink/flink-jar
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager


  pulsar-node:
    image: apachepulsar/pulsar:2.4.0
    hostname: pulsar-node
    container_name: pulsar-node
    networks:
      - app_network
    expose:
      - 8080
      - 6650
    environment:
      - PULSAR_MEM=" -Xms512m -Xmx512m -XX:MaxDirectMemorySize=1g"
    volumes:
      - ./pulsar-jar:/pulsar-jar
    command: /bin/bash -c "bin/apply-config-from-env.py conf/standalone.conf && bin/pulsar standalone"


#  pulsar-client:
#    image: apachepulsar/pulsar:2.4.0
#    hostname: pulsar-client
#    container_name: pulsar-client
#    networks:
#      - app_network
#    environment:
#      - PULSAR_MEM=" -Xms512m -Xmx512m -XX:MaxDirectMemorySize=1g"
#    volumes:
#      - ./pulsar-jar:/pulsar-jar
#    command: /bin/bash
#    stdin_open: true
#    tty: true
#

  pulsar-dashboard:
    image: apachepulsar/pulsar-dashboard:2.4.0
    hostname: pulsar-dashboard
    container_name: pulsar-dashboard
    networks:
      - app_network
    depends_on:
      - pulsar-node
    ports:
      - "80:80"
    environment:
      - SERVICE_URL=http://pulsar-node:8080